version: '3'

services:
  proxy:
    image: nginx:stable
    ports:
      - "${HTTP_PUBLIC_PORT}:80"
    environment:
      TZ: "${TIMEZONE:-Europe/Athens}"
    volumes:
      - ./nginx:/etc/nginx/conf.d:ro
    depends_on:
      - ui
      - api
  ui:
    image: ict.ihu.gr/resumeinsync-ui:latest
    build:
      dockerfile: UI.Dockerfile
      context: .
      args:
        RESUMEINSYNC_UI_REPOSITORY: "${RESUMEINSYNC_UI_REPOSITORY}"
        RESUMEINSYNC_UI_BRANCH: "${RESUMEINSYNC_UI_BRANCH}"
        WEB_APP_PROTOCOL: "${HTTP_PROTOCOL}"
        WEB_APP_IP: "${HTTP_DOMAIN}"
        WEB_APP_PORT: "${HTTP_PUBLIC_PORT}"
        API_APP_PROTOCOL: "${HTTP_PROTOCOL}"
        API_APP_IP: "${HTTP_DOMAIN}"
        API_APP_PORT: "${HTTP_PUBLIC_PORT}"
        API_APP_USERNAME: "${CLIENT_ID}"
        API_APP_PASSWORD: "${CLIENT_SECRET_RAW}"
    environment:
      TZ: "${TIMEZONE:-Europe/Athens}"
  api:
    image: ict.ihu.gr/resumeinsync-api:latest
    build:
      dockerfile: API.Dockerfile
      context: .
      args:
        LINKEDIN_DATA_IMPORTER_REPOSITORY: ${LINKEDIN_DATA_IMPORTER_REPOSITORY}
        ZOTERO_PUBLICATIONS_IMPORTER_REPOSITORY: ${ZOTERO_PUBLICATIONS_IMPORTER_REPOSITORY}
        RESUMEINSYNC_API_REPOSITORY: ${RESUMEINSYNC_API_REPOSITORY}
        LINKEDIN_DATA_IMPORTER_BRANCH: ${LINKEDIN_DATA_IMPORTER_BRANCH}
        ZOTERO_PUBLICATIONS_IMPORTER_BRANCH: ${ZOTERO_PUBLICATIONS_IMPORTER_BRANCH}
        RESUMEINSYNC_API_BRANCH: ${RESUMEINSYNC_API_BRANCH}
    environment:
      TZ: "${TIMEZONE:-Europe/Athens}"
      SIGNING_KEY: "${SIGNING_KEY}"
      VERIFIER_KEY: "${VERIFIER_KEY}"
      DATABASE_USERNAME: "${DB_USERNAME}"
      DATABASE_PASSWORD: "${DB_PASSWORD}"
      DATABASE_URL: "jdbc:postgresql://db:5432/${DB_NAME}"
      CLIENT_ID: "${CLIENT_ID}"
      CLIENT_SECRET: "${CLIENT_SECRET}"
    depends_on:
      - db
  db:
    image: postgres:12-alpine
    volumes:
      - "db_data:/var/lib/postgresql/data"
    environment:
      TZ: "${TIMEZONE:-Europe/Athens}"
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_NAME}"

volumes:
  db_data:

